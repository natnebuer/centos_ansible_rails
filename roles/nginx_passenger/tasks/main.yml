---
- name: Install libcurl-devel
  yum: name=libcurl-devel state=present
  become: yes
  become_user: root

- name: installing gem
  shell: "source ~/.bash_profile && gem install passenger"

- name: get login user PATH
  shell: "source ~/.bash_profile && echo $PATH"
  register: user_path

- name: register if nginx is installed
  stat: path={{ nginx_install_path }}
  register: is_nginx_installed

- name: installing nginx and passenger
  shell: "PATH={{ user_path.stdout }} {{ install_ruby_path }}/bin/ruby {{ install_ruby_path }}/bin/passenger-install-nginx-module --auto --auto-download --prefix={{ nginx_install_path }}"
  become: yes
  become_user: root
  when: is_nginx_installed.stat.exists == false

- name: Detecting HTTP rule on firewall
  command: firewall-cmd --permanent --zone=public --query-service=http
  register: http_setted
  changed_when: false
  ignore_errors: yes
  become: yes
  become_user: root

- name: Allowing HTTP to pass on firewall
  command: firewall-cmd --permanent --zone=public --add-service=http
  when: http_setted.stdout == 'no'
  become: yes
  become_user: root

- name: Detecting HTTPS rule on firewall
  command: firewall-cmd --permanent --zone=public --query-service=https
  register: https_setted
  changed_when: false
  ignore_errors: yes
  become: yes
  become_user: root

- name: Allowing HTTPS to pass on firewall
  command: firewall-cmd --permanent --zone=public --add-service=https
  when: https_setted.stdout == 'no'
  become: yes
  become_user: root  
  
- name: Reloading Firewall Config
  command: firewall-cmd --reload
  become: yes
  become_user: root  

- name: Getting Passenger Ruby config
  shell: "source ~/.bash_profile && which ruby"
  register: passenger_ruby_config
  ignore_errors: yes

- name: Getting Passenger Root path
  shell: "source ~/.bash_profile && passenger-config --root"
  register: passenger_ruby_root
  ignore_errors: yes  

- name: upload nginx init script
  template: src=./../templates/init_nginx dest=/etc/rc.d/init.d/nginx
  become: yes
  become_user: root

- name: excutable for init script
  file: path=/etc/rc.d/init.d/nginx state=touch mode="u+x,g+x,o+x"
  become: yes
  become_user: root  

- name: Sending our default NGINX config over
  template: src=./../templates/nginx.conf dest="{{ nginx_install_path }}/conf/nginx.conf" mode=0644
  become: yes
  become_user: root  

- name: make directory for conf.d 
  file: path="{{ nginx_install_path }}/conf/conf.d" state=directory mode=0755 recurse=yes
  become: yes
  become_user: root

# Honestly I don't know why system service does not work. any help will be nice.
- name: start nginx 
  shell: sudo ./nginx start chdir=/etc/init.d
